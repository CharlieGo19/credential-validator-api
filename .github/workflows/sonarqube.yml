name: SonarQube
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build solution
        run: dotnet build
      - name: Run tests with coverage
        run: dotnet test CredentialValidator.Tests --no-build --collect:"XPlat Code Coverage" --results-directory CredentialValidator.Tests/TestResults
      - name: Install ReportGenerator tool
        run: dotnet tool install -g dotnet-reportgenerator-globaltool
      - name: Convert coverage to Cobertura format
        run: reportgenerator -reports:"CredentialValidator.Tests/TestResults/*/coverage.cobertura.xml" -targetdir:"CredentialValidator.Tests/TestResults/CoverageReport" -reporttypes:Cobertura
      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"charliesgophers_cgo" /o:"charliesgophers" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.coverageReportPaths="CredentialValidator.Tests/TestResults/CoverageReport/cobertura.xml" /d:sonar.cs.vstest.reportsPaths="CredentialValidator.Tests/TestResults/**/*.trx" 
      - name: Build for SonarCloud
        run: dotnet build
      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
